Tutorial para el uso de los distintos códigos.

----------------------------------------------------------------------------------------
1- Bajada y Procesado de Datos.

* Definir la rotación, usar el sitio http://umtof.umd.edu/pm/crn/
Las fechas son desde Tierra=SOHO=SDO.

* Para STEREO corregir las fechas de las series temporales con la orbit tool:
http://stereo-ssc.nascom.nasa.gov/cgi-bin/make_where_gif

* Crear el subdirectorio "~/work/CR-XXXX" para ir poniendo un archivo TXT con todo lo que uno va haciendo para el proyecto. Ejemplo: @letitbe:/data1/work/CR2056/commands.txt

* Bajada de datos:
   EIT: /data1/work/dem/grab_data_eit.pro
  EUVI: /data1/work/dem/grab_data.pro
   AIA: /data1/work/dem/grab_data_aia.pro
Ejemplo de descarga de un *batch con AIA
.r grab_data_full_diego.pro
.r grab_data_full_diego.pro
grab_data_full_diego,'2017-06-23T00:00:00','2017-07-20T23:59:59','AIA'   ,'/data1/tomography/DATA/aia/CR2192/','data_cr2192' 

* Procesado de datos:
armar en cada carpeta un archivo list.171 con el nombre los files haciendo ls * > list.171 y EN EL CASO DE AIA editando el archivo poniendo el numero de lineas (arriba de todo) sin contar el cero.
Es decir que arriba va el numero de la linea final-1, capito?
    EIT: /data1/work/dem/eit_rpm.pro
         Ejemplo: tom@nalai:/data1/work/Minimum_1996/proces.solmin96.batch
   EUVI: SSW:euvi_deconvolve_test.pro
         Ejemplo: tom@nalai:/data1/work/CR2081/process_data_A.batch
	 Si es DECON: euvi_deconvolve_test,directory='/data1/tomography/DATA/euvi/CR2081/A171/',listfile='list.A171',nfiles=618,binfactor=2,/decon,/dnsec,/rebin,/rescale,/normalize,/despike
	 OBS: hay que compilar .r /usr/local/ssw/packages/euvdeconpak/idl/euvi_deconvolve.pro
    AIA: /data1/work/dem/data_aia.pro
         Ejemplo: process_data_aia_lev10,'CR2208/',ib1=0,ib2=3,/rbn,basedir='/data1/',dirout='/data2/'

   Como resultado salen las imágenes procesadas en DN/SEC/[Ck0], que son requeridas para tomografía (código LDEM). Con bf=2 se rebinea a 1024² (euvi son originalmente de 2048²), no se rotan, se hace de-spiking.

<   Ir al directorio de cada banda, ejemplo B171, y con:   
   ls *Ck0*fts > list.B171.proc
   generar un archivo txt con la lista de imágenes procesadas, editar y poner en la primer linea el número de datos.

* Inspección de datos:
   @nalai:/data1/work/dem/imagecheck_diego.pro para chequear datos.
   Ver "pro inspection_cycle_euvi_2081" como ejemplo.

   Esto termina en archivos list.171.allframes.gif y list.171.variability.gif, los uso para ver que onda las imágenes. SI hay datos malos, re-correr con /select, pero con primer imagen BUENA.
   Termina con los mismos dos graficos depurados de datos malos, si todo salio bien, y un nuevo archivo TXT: list.B171.proc.selected, agregarle el número de lineas al prinicipio.
   Chequear todos los graficos de las medianas, xq hay varios filtros nuevos que sacan missing block, imagenes desenfocadas y cosas raras. Todos deben parecer suaves.

-> OBS: debido a que estamos bajando muchas imagenes, la ram no alcanza para hacer el imagecheck de todas las imagenes al mismo tiempo xq las guarda en memoria. Entonces se divide el archivo en varios con menos cantidad de imagenes usando "destripar" y se hace imagecheck a cada sub lista. Cuando quedan todas las sublistas con el /select, se utiliza "concatenar" para volver a tener 1 solo archivo de lista con todo lo seleccionado.

Hacer un video con las imagenes y mirarlas una por una. A veces en el allframe se ven bien pero en el video estan invertidas o rotadas y asi no las podemos usar.
   Hacer video con make_movie,dir,'list.A195.b4',195,'_b4' dentro del imagecheck. Eso genera gif, pasarlos a jack y convertirlos en jpg con el bash ./programita.sh y luego hacerlas
   video con ffmpeg -framerate 7 -i frame%03d.jpg movie.mp4
   OBS: en el caso de euvi, las imagenes jpg tiene un escaleo diferente y funciona mejor el sig comando
   ffmpeg -framerate 7 -i frame%03d.jpg -vf scale=1024:1024 movie.mp4

   En el caso B284 apply_mask a los selected.
   
* Time-Binning de los datos ya procesados y seleccionados:
    EIT y EUVI: /data1/work/dem/data_rpm.pro
          Ver "pro timebinning_cycle" el ejemplo de CR-2081
	   timebinning,'','/data1/tomography/DATA/euvi/CR2082/A171/','list.A171.DECON_2.proc.selected.video_selection',4,/euvi
    AIA: /data1/work/dem/data_aia.pro
           Ejemplo: timebinning,'','/Storage1TB/tomography/DATA/aia/test/335','list.335.processed',4
   
    Cuando termine, en cada directorio de banda habrá:
    imágenes bineadas: mismo nombre pero con "b4" agregado en EIT y EUVI, y "b" en AIA.
    un logfile que dice que imágenes van en cada bin
    
    Hacer ls *b4*fts >  list.B171.b4, etc. Agregarle el número de lineas al ppio.
    Luego hacer un imagecheck de las listas b4, corregir bins problemáticos de ser necesario. Cada bin cuenta.
    Diego-> Si las imagenes estaban bien aca no van a estar mal al ser bineadas.
----------------------------------------------------------------------------------------
2- Creación de Matriz Tomgráfica.

   En: /data1/tomography/EUVTom/buildA_params.h
    Seleccionar:  #define EUVIBUILD
   y Editar las STRINGS de estas linas:

OBS: Recientemente se cambió a /data1/tomography/EUVTom.ARCHIVE/   
OBS2: /data1/tomography/SolarTom_GRUPO/

  #define DATADIR    "/data1/tomography/DATA/euvi/CR2081/B171/"
  #define CONFSTRING DATADIR"list.B171.b4"
  #define A_OUTFILE  "euviB.171.cr2081.ri.98-ro1.025.DECON"
   Luego en EUVTom:    make clean
                       make builda  (Esto genera el ejecutable builda, que creará la matriz especificada)
                       mv builda baB171.cr2081.NODEC
                       repito para 195 y 284.
   Edito: tom@nalai:/data1/work/CR2081/commands.txt, donde agrego los comandos de construcción de matrices A, y todo lo que siga.
   Luego largo los procesos.
Ej: nohup ./baB171.cr2081.NODEC > termout.baB171.cr2081.NODEC 2>&1 &
----------------------------------------------------------------------------------------
3- Reconstrucción Tomográfica de FBE.
   En /data1/tomography/EUVTom/buildA_params.h debe estar seleccionada el instrumento que uso.
   Editar: /data1/tomography/EUVTom/solve_cv_params.h
   OBS: Recientemente se cambió a /data1/tomography/EUVTom.ARCHIVE/
   OBS2: ahora es nalai:/data1/tomography/SolarTom_GRUPO/

   y asegurarse que en esta linea estén indicadas las dimensiones correctas de la grilla en este formato:
   #define FILESTR1 "hlaplac_26_90_180"  --> usamos 
   Luego en EUTom:   make clean
                     make callsolve_cg  (Esto general el ejectutable callsolve_cg, que hará las tomografías)

   Edito: tom@nalai:/data1/work/CR2081/commands.txt, donde agrego los comandos de reconstrucción tomográfica,
   Tiene siempre este formato:
   
   nohup ./callsolve_cg x_input x_output matrix_suffix L > logfile 2>&1 &

   x_input:  solucion incial, puede ser una solución previa o podés siempre usar x_zero_100_180
   x_output: solucion final
   matrix_suffix = A_OUTFILE del buildA_params.h usado,
   logfile: es donde se escribe la salida de terminal
   
   Ejemplo de como inspeccionar una FBE:
   tom@nalai:/data1/tomography/idl/compare_fbes.pro

   
   OBS: Si la matriz de regularizacion (filestr1) no existe xq se modificaron las dimensiones entonces seguir los sig pasos
   1) /data1/tomography/SolarTom_idl/derivs_hollowsph.pro
    IDL>  derivs_hollowsph,nrad= 30,ntheta=90,nphi=180,directory='/data1/tomography/bindata/',fname_ext='30_90_180',/r3 
    Ahora la matrix de regularización está en formato ROWS.

   2) /data1/tomography/SolarTom/
    > ./row_to_col
    y seguir las indicaciones utilizando el output del paso 1)

    Ahora la matrix de regularización está en formato COLS, lista para usar por los códigos de tomografía.
   
   
3.1 - validacion cruzada
en /data1/tomography/SolarTom_GRUPO
solve_cv_params.h tiene al final opciones para CV
para EUV usualmente usamos 
#define MIN_LAMBDA 5.e-2  
#define MAX_LAMBDA 5.e+0
make clean
make auto_cv_brent
antes y entre aca largada de nohup correr -->  ulimit -s unlimited
   nohup ./auto_cv_brent -r5 -w1 -m matriz -i fbe_input -o fbe_output(debe indicar r5w1 o lo que sea) > termout 2>&1 &

IMPORTANTE: largar los codigos espaciados en tiempo al menos unos segundos, ya que el codigo reorganiza matrices y les pone nombres segun la hora de creacion del termout
y ha pasado que se crean dos matrices con el mismo nombre para dos corridas distintas.

esto arroja datos de lambda en el termout que deben rescatarse con un  grep 'function value' termout, todo se guarda en validacion_cruzada.txt 
y solemos usar las medianas (sacando los outliers) como lambda optimos para rehacer las fbes optimas y luego ldem finales.
OBS: cualquier duda ver mail llamado "auto_cv: parámetros de convergencia"


hay una version antigua de esto en scaling.of.lambda.txt  
-----------------------------------------------------------------------------------------------
4- Cálculo de LDEM.

   El código es "ldem_v2.pro" para todos los instrumentos. La rutina principal se llama LDEM_V2
   y se corre para el instrumento EUVI usando el wrapper ldem_v2_euvi que llama a la rutina principal
   (LDEM_V2)
   
;FORMA VIEJA DE CORRER.
   cd /data1/work/dem/ 
  .r ldem_v2
  .r ldem_v2
  ldem_v2_euvi,/gauss1 
;esta bueno comentar las FBES utilizadas, y en el nombre del batch que figure exactamente que estamos corriendo,ejemplo

ldem.v3_cr2081_euviA_decon_l0.375_fullhollow.batch
  .r ldem_v3
  .r ldem_v3	
  datafiles = ['']

  ldem_v2_euvi,/gauss1

  ;datafiles utilizados
  ;x_euvi.A.???.cr2081.26x90_bf4_ri.000_ro1.025_l0.375_DECON

sswidlback nombre_del_file (sin el .batch) &

  una vez finalizado el cálculo mover el archivo LDEM a /data1/DATA/ldem_files/ porque las rutinas
  de analisis, visualización y trazado esperan encontrar el archivo LDEM en ese directorio.

* IMPORTANTE
  leer_ldem_escribir_ascii.pro lee las ldems (usa commons) y segun las flags guarda matrices de los resusltados de las tomos. Tmb uso la misma rutina para guardar las talbas de datos para pasarle a la gente de michigan.

  Las matrices que saco de aca se pueden usar con las xtools.

-----------------------------------------------------------------------------------------------
Si estamos usando AWSoM:
1)read_awsom.pro
Lee la tabla de datos dada por les muchaches de UMich. Notar que suelen modificar el orden de los datos, con lo cual hay una linea de lectura de datos que debe ser modificada a mano.
la keyword /interpol interpolara la grilla de datos a la grilla tomografica. hay que decirle que matrices queremos que guarde con las /flags ne_out, /B_sph_out etc.
* si se usa /sph_data entonces se guarda en un .sav la estructura de campo B que se usara luego en los trazados.
* Si se define grilla_demt= 1.26 o bien =[1.055,1.55] por decir algo, entonces se recorta la parte radial de la grilla de la matriz que se va a guardar.

2) Si queremos graficar los datos, es sencillo, se pueden usar las xtools sobre  esas matrices.

3) Una vez seleccionada una rotacion y el campo a usar (ya sea PFSS o awsom) viene la parte del trazado.
   si no se usa la flag pfss_data_file ni mhd entonces el trazado hará un create_structure con el PFSS (cmo las viejas epocas)
   si queremos usar el campo que viene de awsom entonces usamos la flag field_awsom, de esta forma se hace un restore del sph_data realizado en el paso 1), esto
   genera un pfss_data y lo guarda en un .sav.

4) De ahora en mas, cada vez que queramos hacer un trazado utilizando el mismo campo, podemos levantar ese pfss_data usando la flag pfss_data_file que hara un restore.

5) Si no se define awsom_file, entonces se debe definir ldem_file y entonces ser trazara todo usando datos de demt.
   Si en cambio se define awsom_file entonces se llama el read_awsom_matriz que posee varias flags (que deben ir en ese orden). Ej. /te_out indica la matriz que se va a leer y te sera el
   nombre de la variable que tendra la matriz que se leyó, la cual se trazara a lo largo de los loops

6) Al final el trazado se guarda en un .sav, de esta forma nos olvidamos de los tediosos "read_*" y con un restore ya estamos.

7) statloop_awsom_diego, corre el statloop atomizado y sin commons.
   La flag /demt entonce se setean los errores de euvi y se analiza el WT y el score.
   La flag /ajuste_alto los ajustes de los loops se dan arriba de 1.055Rsun. Esto sirve para awsom.
   Todo se guarda en un .sav

8) Para analizar el statloop, siemplente hacer un restore y aplicar los filtros.
   Para evitar los commons, por ahora no uso el filter.pro que usabamos antes, no lo veo necesario.
   Para ver ejemplors --> estadistica_diego.pro

--------------------------------------------------------------------------------------------------
5- Modelo PFSS.
  
1) BAJAR magnetograma sinóptico de:
GONG >
 http://gong.nso.edu/data/magmap/crmap.html

MDI >
 http://soi.stanford.edu/magnetic/index6.html
 ELEGIR Interpolated Polar Field
 
2) MOVER a /data1/DATA/Magnetograms/
   mv filename.fits /data1/DATA/Magnetograms/

3) IR al directorio donde está el FDIPS
   cd /data1/work/FDIPS_v1.2/

4) "PREPARAR" el magnetograma, pasar el magnetograma a un archivo ASCII     
   cd input
   idl
   IDL> fits_to_ascii,filename
   Is the magnetogram uniform in cos Theta (T/F): T (poner True)
   IDL> exit
   filename debe ser un string con el nombre del magnetograma sin la extensión 
   (sin el .fits).
   Se ha creado un archivo ASCII con el magnetograma de nombre filename.dat 

   La otra opcion es:
   fits_to_ascii_new, FileIn, FileOut
   FileIn tiene que ser un string y termina en .fits
    
5) EDITAR el archivo FDIPS.in
   e FDIPS.in
   * poner el nombre del magnetograma ASCII (filename.dat)
   * poner la resolución espacial de la grilla esférica: 150x180x360
   * poner el nombre del archivo se salida donde se guarda el campo magnético:
     fdips_field_150x180x360_filename.dat
   
5)  desde el directorio input/ COPIAR:
    cp filename.dat FDIPS.in ../run/

6)  COMPILAR el código, en el directorio ppal:
    cd ..
    make FDIPS1

7)  CORRER FDIPS1 desde la carpeta run/ con:
    cd run/
    ./FDIPS1.exe

8)  MOVER fdips_field_150x180x360_filename.dat a /data1/DATA/PFSSM/
    mv fdips_field_150x180x360_filename.dat /data1/DATA/PFSSM/
   
9)  Pasar el modelo PFSSM a formato binario para que el archivo sea MUCHO más liviano	
    cd /data1/work/dem/
    idl
    IDL> .r create_structure
    IDL> create_structure,'fdips_field_150x180x360_filename.dat',/writefile
    IDL> exit
    cd /data1/DATA/PFSSM
    esta rutina crea un archivo binario de nombre: fdips_field_150x180x360_filename.ubdat
    rm fdips_field_150x180x360_filename.dat
  
   MAPOC: /data1/work/dem/process_PFSSM.pro
   Requiere previamente hacer un trazado de lineas (parte de "MLDT" que está en el trace)

----------------------------------------------------------------------------------------
6- Grafico de Mapas de Carrington y visualizaciones de 3D del PFSS

    graficos.pro (requiere de read_ldem.pro, create_structure.pro, sph_field_str_coord_unifang.pro)
    Mapas de Carrington:
    ver ejemplo en hacer_graficos 
    Visualización 3D del PFSS:
    ver ejemplo en hacer_visualizacion (correr con /create) en graficos.pro
    
----------------------------------------------------------------------------------------
7- Trazado MLDT.

    mldt.pro 
    ver ejemplo en hacer_trace

OBS: PARA HACER LOS BETA HAY QUE INTERPOLAR CON 
process_PFSSM_v3.pro (creo que esta en jack, en nalai ni idea.)
NO ES NECESARIO ldem.v3_cr2082_euviA_decon_l0.225_halfhollow_hlaplac.batchPARA EL MLDT.

Trazado 2.0
OBS: habilita utilizar ldem/awsom a lo largo de lineas magneticas de pfss/awsom. 
1) Se hace un trazado como siempre con las flags adecuadas, esto guardara un save,pfss_data donde estara
la salida del spherical_trace_field. Pesa bastante segun cuanta altura se quiera trazar, hasta 6rsun seran algo asi como 8Gb.

2) Luego se puede dar eso como entrada, y se trazan los resultados termodinamicos a lo largo del pfss_data.sav guardado.

3) Al finalizar se guarda un trazado.sav de todos los vectores trazados, los cuales seran utilizados luego en el statloop. Estos para
awsom y sus 6Rsun da algo asi como 3.5gb

Statloop 2.0
Levanta un trazado.sav y de forma ordenada hace la mistica de siempre. Ahora en un formato atomizado y facil de modificar por cualqueir ser humano.

Ploteo 2.0
Ploteo de selecciones del statloop. EN PROCESO!



MAPOC
los mapocs se hacen dandole el trazado como input
utilizando pro make_mapoc en mldt*pro
el mapoc bien hecho se realiza con mldt_errorbox_diego_A2_median.pro version nalai.
  
Para trazar fdips con resultados de awsom ver
trazado_2081_aswomfield_awsom_10alturas.batch

Al parecer habiamos trazado fdips con awsom. Esta vez queremos trazar con el campo B de awsom.
read_awsom.pro lee awsom y guarda matrices de datos.
ver el trce_LDEM de .r mldt_errorbox_diego_A2_median.pro
y el .r create_structure_MHD_new.pro
----------------------------------------------------------------------------------------
8- Cálculo de Imágenes Sintéticas.


--------------------------------------------------------------------------------------
